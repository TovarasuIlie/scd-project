@page "/couriers/view/{id:int}"
@using System.Security.Claims
@inject ManagerService managerService;
@inject DeliveryService deliveryService;
@inject NavigationManager navigationManager;
@attribute [Authorize(Roles = "ROLE_MANAGER")]

<h1>Detalii Curier</h1>
<hr>
<div class="container">
    <div class="row">
        <div class="col-lg">
            <div class="card card-body border-0 shadow-lg mb-3">
                <table class="table">
                    <tbody>
                        <tr>
                            <td>ID</td>
                            <td>@courier.Id</td>
                        </tr>
                        <tr>
                            <td>Nume</td>
                            <td>@courier.Name</td>
                        </tr>
                        <tr>
                            @if (@courier.Manager is not null)
                            {
                                <td>Nume manager</td>
                                <td>@courier.Manager.Name</td>
                            }
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <AuthorizeView>
            <Authorized>
                <div class="col-lg">
                    <div class="card border-0 shadow-lg">
                        <div class="card-header">
                            Admin Tools
                        </div>
                        <div class="card-body d-flex flex-column gap-3">
                            @if(int.Parse(context.User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.NameIdentifier)?.Value) != courier.Id)
                            {
                                @if (courier.Role == "ROLE_COURIER")
                                {
                                    <button class="btn btn-warning w-100" @onclick="MakeManager">Seteaza ca si manager!</button>
                                }
                                @if (courier.Role == "ROLE_MANAGER")
                                {
                                    <button class="btn btn-warning w-100" @onclick="MakeCourier">Seteaza ca si courier!</button>
                                }
                                @if (courier.Manager is null && courier.Role != "ROLE_MANAGER")
                                {
                                    <button class="btn btn-success w-100" @onclick="MakeYouManager">Ia in custodie!</button>
                                }
                                @if (courier.Manager is not null && courier.Role != "ROLE_MANAGER" && int.Parse(context.User.Claims.FirstOrDefault(x => x.Type == ClaimTypes.NameIdentifier)?.Value) == courier.Manager.Id)
                                {
                                    <button class="btn btn-danger w-100" @onclick="RemoveYouManager">Renunta la custodie!</button>
                                }
                            }
                            <button class="btn btn-danger w-100">Sterge cont!</button>
                        </div>
                    </div>
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
    <h2>Istoric livrari</h2>
    <hr>
    @foreach (Delivery delivery in deliveries)
    {
        <div class="card border-0 shadow-lg mb-3">
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col">
                        <h5 class="card-title">@delivery.AWB</h5>
                        <p class="card-text fs-6 mb-1">Adresa de ridicare: @delivery.PickingAddress</p>
                        <p class="card-text fs-6">Plasata in: @delivery.CreateDate</p>
                        <p class="card-text fs-6">
                            @if (delivery.Status == "NEW")
                            {
                                <div class="badge bg-danger">
                                    Colet nou
                                </div>
                            }
                            @if (delivery.Status == "PENDING")
                            {
                                <div class="badge bg-warning">
                                    Colet in curs
                                </div>
                            }
                            @if (delivery.Status == "DELIVERED")
                            {
                                <div class="badge bg-success">
                                    Livrat
                                </div>
                            }
                        </p>
                    </div>
                    <div class="col">
                        <a href="/delivery/view/@delivery.AWB" class="btn btn-sm btn-primary float-end">Detalii</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int ID { get; set; }

    private Courier courier { get; set; } = new Courier();
    private List<Delivery> deliveries { get; set; } = new List<Delivery>();

    protected override async Task OnInitializedAsync()
    {
        courier = await managerService.GetCourierAsync(ID);
        deliveries = await deliveryService.GetAllDeliveryForCourierAsync(ID);
    }

    private async Task MakeCourier()
    {
        await managerService.PromoteToCourier(ID, navigationManager);
    }

    private async Task MakeManager()
    {
        await managerService.PromoteToManager(ID, navigationManager);
    }

    private async Task MakeYouManager()
    {
        await managerService.SetManager(ID, navigationManager);
    }

    private async Task RemoveYouManager()
    {
        await managerService.RemoveManager(ID, navigationManager);
    }
}
